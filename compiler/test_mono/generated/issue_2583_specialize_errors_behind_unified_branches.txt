procedure List.2 (List.74, List.75):
    let List.279 : U64 = CallByName List.6 List.74;
    let List.275 : Int1 = CallByName Num.22 List.75 List.279;
    if List.275 then
        let List.277 : I64 = CallByName List.60 List.74 List.75;
        let List.276 : [C {}, C I64] = Ok List.277;
        ret List.276;
    else
        let List.274 : {} = Struct {};
        let List.273 : [C {}, C I64] = Err List.274;
        ret List.273;

procedure List.6 (#Attr.2):
    let List.280 : U64 = lowlevel ListLen #Attr.2;
    ret List.280;

procedure List.60 (#Attr.2, #Attr.3):
    let List.278 : I64 = lowlevel ListGetUnsafe #Attr.2 #Attr.3;
    ret List.278;

procedure List.9 (List.184):
    let List.271 : U64 = 0i64;
    let List.264 : [C {}, C I64] = CallByName List.2 List.184 List.271;
    let List.268 : U8 = 1i64;
    let List.269 : U8 = GetTagId List.264;
    let List.270 : Int1 = lowlevel Eq List.268 List.269;
    if List.270 then
        let List.185 : I64 = UnionAtIndex (Id 1) (Index 0) List.264;
        let List.265 : [C Int1, C I64] = Ok List.185;
        ret List.265;
    else
        let List.267 : Int1 = true;
        let List.266 : [C Int1, C I64] = Err List.267;
        ret List.266;

procedure Num.22 (#Attr.2, #Attr.3):
    let Num.273 : Int1 = lowlevel NumLt #Attr.2 #Attr.3;
    ret Num.273;

procedure Str.27 (#Attr.2):
    let #Attr.3 : {I64, U8} = lowlevel StrToNum #Attr.2;
    let Str.70 : U8 = StructAtIndex 1 #Attr.3;
    let Str.71 : U8 = 0i64;
    let Str.67 : Int1 = lowlevel NumGt Str.70 Str.71;
    if Str.67 then
        let Str.69 : Int1 = false;
        let Str.68 : [C Int1, C I64] = Err Str.69;
        ret Str.68;
    else
        let Str.66 : I64 = StructAtIndex 0 #Attr.3;
        let Str.65 : [C Int1, C I64] = Ok Str.66;
        ret Str.65;

procedure Test.0 ():
    let Test.4 : Int1 = true;
    if Test.4 then
        let Test.6 : List I64 = Array [];
        let Test.5 : [C Int1, C I64] = CallByName List.9 Test.6;
        dec Test.6;
        ret Test.5;
    else
        let Test.3 : Str = "";
        let Test.2 : [C Int1, C I64] = CallByName Str.27 Test.3;
        dec Test.3;
        ret Test.2;
