procedure Num.24 (#Attr.2, #Attr.3):
    let Test.18 : I64 = lowlevel NumMul #Attr.2 #Attr.3;
    ret Test.18;

procedure Test.1 (Test.6):
    let Test.22 : Int1 = false;
    let Test.23 : Int1 = lowlevel Eq Test.22 Test.6;
    if Test.23 then
        let Test.8 : I64 = 3i64;
        ret Test.8;
    else
        let Test.10 : I64 = 5i64;
        ret Test.10;

procedure Test.1 (Test.6):
    let Test.30 : Int1 = StructAtIndex 1 Test.6;
    let Test.31 : Int1 = false;
    let Test.32 : Int1 = lowlevel Eq Test.31 Test.30;
    if Test.32 then
        let Test.8 : I64 = StructAtIndex 0 Test.6;
        ret Test.8;
    else
        let Test.10 : I64 = StructAtIndex 0 Test.6;
        ret Test.10;

procedure Test.0 ():
    let Test.40 : I64 = 7i64;
    let Test.41 : Int1 = false;
    let Test.39 : {I64, Int1} = Struct {Test.40, Test.41};
    let Test.35 : I64 = CallByName Test.1 Test.39;
    let Test.38 : Int1 = false;
    let Test.36 : I64 = CallByName Test.1 Test.38;
    let Test.25 : I64 = CallByName Num.24 Test.35 Test.36;
    let Test.33 : I64 = 11i64;
    let Test.34 : Int1 = true;
    let Test.27 : {I64, Int1} = Struct {Test.33, Test.34};
    let Test.26 : I64 = CallByName Test.1 Test.27;
    let Test.16 : I64 = CallByName Num.24 Test.25 Test.26;
    let Test.24 : Int1 = true;
    let Test.17 : I64 = CallByName Test.1 Test.24;
    let Test.15 : I64 = CallByName Num.24 Test.16 Test.17;
    ret Test.15;
