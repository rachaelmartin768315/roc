procedure Num.22 (#Attr.2, #Attr.3):
    let Test.10 : Builtin(Int(I64)) = lowlevel NumAdd #Attr.2 #Attr.3;
    ret Test.10;

procedure Test.3 (Test.5):
    let Test.16 : Builtin(Bool) = 1i64;
    let Test.17 : Builtin(Bool) = GetTagId Test.5;
    let Test.18 : Builtin(Bool) = lowlevel Eq Test.16 Test.17;
    if Test.18 then
        let Test.12 : Builtin(Int(I64)) = 0i64;
        ret Test.12;
    else
        let Test.6 : Union(NullableUnwrapped { nullable_id: true, other_fields: [Builtin(Int(I64)), RecursivePointer] }) = UnionAtIndex (Id 0) (Index 1) Test.5;
        let Test.14 : Builtin(Int(I64)) = 1i64;
        let Test.15 : Builtin(Int(I64)) = CallByName Test.3 Test.6;
        let Test.13 : Builtin(Int(I64)) = CallByName Num.22 Test.14 Test.15;
        ret Test.13;

procedure Test.0 ():
    let Test.2 : Union(NullableUnwrapped { nullable_id: true, other_fields: [Builtin(Int(I64)), RecursivePointer] }) = Nil ;
    let Test.8 : Builtin(Int(I64)) = CallByName Test.3 Test.2;
    let Test.9 : Builtin(Int(I64)) = CallByName Test.3 Test.2;
    dec Test.2;
    let Test.7 : Builtin(Int(I64)) = CallByName Num.22 Test.8 Test.9;
    ret Test.7;
