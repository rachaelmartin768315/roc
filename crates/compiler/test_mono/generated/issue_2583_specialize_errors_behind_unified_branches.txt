procedure List.2 (List.72, List.73):
    let List.254 : U64 = CallByName List.6 List.72;
    let List.250 : Int1 = CallByName Num.22 List.73 List.254;
    if List.250 then
        let List.252 : I64 = CallByName List.60 List.72 List.73;
        let List.251 : [C {}, C I64] = Ok List.252;
        ret List.251;
    else
        let List.249 : {} = Struct {};
        let List.248 : [C {}, C I64] = Err List.249;
        ret List.248;

procedure List.6 (#Attr.2):
    let List.255 : U64 = lowlevel ListLen #Attr.2;
    ret List.255;

procedure List.60 (#Attr.2, #Attr.3):
    let List.253 : I64 = lowlevel ListGetUnsafe #Attr.2 #Attr.3;
    ret List.253;

procedure List.9 (List.166):
    let List.246 : U64 = 0i64;
    let List.239 : [C {}, C I64] = CallByName List.2 List.166 List.246;
    let List.243 : U8 = 1i64;
    let List.244 : U8 = GetTagId List.239;
    let List.245 : Int1 = lowlevel Eq List.243 List.244;
    if List.245 then
        let List.167 : I64 = UnionAtIndex (Id 1) (Index 0) List.239;
        let List.240 : [C Int1, C I64] = Ok List.167;
        ret List.240;
    else
        let List.242 : Int1 = true;
        let List.241 : [C Int1, C I64] = Err List.242;
        ret List.241;

procedure Num.22 (#Attr.2, #Attr.3):
    let Num.273 : Int1 = lowlevel NumLt #Attr.2 #Attr.3;
    ret Num.273;

procedure Str.27 (#Attr.2):
    let #Attr.3 : {I64, U8} = lowlevel StrToNum #Attr.2;
    let Str.70 : U8 = StructAtIndex 1 #Attr.3;
    let Str.71 : U8 = 0i64;
    let Str.67 : Int1 = lowlevel NumGt Str.70 Str.71;
    if Str.67 then
        let Str.69 : Int1 = false;
        let Str.68 : [C Int1, C I64] = Err Str.69;
        ret Str.68;
    else
        let Str.66 : I64 = StructAtIndex 0 #Attr.3;
        let Str.65 : [C Int1, C I64] = Ok Str.66;
        ret Str.65;

procedure Test.0 ():
    let Test.4 : Int1 = true;
    if Test.4 then
        let Test.6 : List I64 = Array [];
        let Test.5 : [C Int1, C I64] = CallByName List.9 Test.6;
        dec Test.6;
        ret Test.5;
    else
        let Test.3 : Str = "";
        let Test.2 : [C Int1, C I64] = CallByName Str.27 Test.3;
        dec Test.3;
        ret Test.2;
