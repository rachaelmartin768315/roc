procedure List.2 (List.76, List.77):
    let List.301 : U64 = CallByName List.6 List.76;
    let List.297 : Int1 = CallByName Num.22 List.77 List.301;
    if List.297 then
        let List.299 : I64 = CallByName List.60 List.76 List.77;
        let List.298 : [C {}, C I64] = Ok List.299;
        ret List.298;
    else
        let List.296 : {} = Struct {};
        let List.295 : [C {}, C I64] = Err List.296;
        ret List.295;

procedure List.6 (#Attr.2):
    let List.302 : U64 = lowlevel ListLen #Attr.2;
    ret List.302;

procedure List.60 (#Attr.2, #Attr.3):
    let List.300 : I64 = lowlevel ListGetUnsafe #Attr.2 #Attr.3;
    ret List.300;

procedure List.9 (List.203):
    let List.293 : U64 = 0i64;
    let List.286 : [C {}, C I64] = CallByName List.2 List.203 List.293;
    let List.290 : U8 = 1i64;
    let List.291 : U8 = GetTagId List.286;
    let List.292 : Int1 = lowlevel Eq List.290 List.291;
    if List.292 then
        let List.204 : I64 = UnionAtIndex (Id 1) (Index 0) List.286;
        let List.287 : [C Int1, C I64] = Ok List.204;
        ret List.287;
    else
        let List.289 : Int1 = true;
        let List.288 : [C Int1, C I64] = Err List.289;
        ret List.288;

procedure Num.22 (#Attr.2, #Attr.3):
    let Num.273 : Int1 = lowlevel NumLt #Attr.2 #Attr.3;
    ret Num.273;

procedure Str.27 (#Attr.2):
    let #Attr.3 : {I64, U8} = lowlevel StrToNum #Attr.2;
    let Str.72 : U8 = StructAtIndex 1 #Attr.3;
    let Str.73 : U8 = 0i64;
    let Str.69 : Int1 = lowlevel NumGt Str.72 Str.73;
    if Str.69 then
        let Str.71 : Int1 = false;
        let Str.70 : [C Int1, C I64] = Err Str.71;
        ret Str.70;
    else
        let Str.68 : I64 = StructAtIndex 0 #Attr.3;
        let Str.67 : [C Int1, C I64] = Ok Str.68;
        ret Str.67;

procedure Test.0 ():
    let Test.4 : Int1 = true;
    if Test.4 then
        let Test.6 : List I64 = Array [];
        let Test.5 : [C Int1, C I64] = CallByName List.9 Test.6;
        dec Test.6;
        ret Test.5;
    else
        let Test.3 : Str = "";
        let Test.2 : [C Int1, C I64] = CallByName Str.27 Test.3;
        dec Test.3;
        ret Test.2;
