procedure List.2 (List.73, List.74):
    let List.274 : U64 = CallByName List.6 List.73;
    let List.270 : Int1 = CallByName Num.22 List.74 List.274;
    if List.270 then
        let List.272 : I64 = CallByName List.60 List.73 List.74;
        let List.271 : [C {}, C I64] = Ok List.272;
        ret List.271;
    else
        let List.269 : {} = Struct {};
        let List.268 : [C {}, C I64] = Err List.269;
        ret List.268;

procedure List.6 (#Attr.2):
    let List.275 : U64 = lowlevel ListLen #Attr.2;
    ret List.275;

procedure List.60 (#Attr.2, #Attr.3):
    let List.273 : I64 = lowlevel ListGetUnsafe #Attr.2 #Attr.3;
    ret List.273;

procedure List.9 (List.184):
    let List.266 : U64 = 0i64;
    let List.259 : [C {}, C I64] = CallByName List.2 List.184 List.266;
    let List.263 : U8 = 1i64;
    let List.264 : U8 = GetTagId List.259;
    let List.265 : Int1 = lowlevel Eq List.263 List.264;
    if List.265 then
        let List.185 : I64 = UnionAtIndex (Id 1) (Index 0) List.259;
        let List.260 : [C Int1, C I64] = Ok List.185;
        ret List.260;
    else
        let List.262 : Int1 = true;
        let List.261 : [C Int1, C I64] = Err List.262;
        ret List.261;

procedure Num.22 (#Attr.2, #Attr.3):
    let Num.273 : Int1 = lowlevel NumLt #Attr.2 #Attr.3;
    ret Num.273;

procedure Str.27 (#Attr.2):
    let #Attr.3 : {I64, U8} = lowlevel StrToNum #Attr.2;
    let Str.72 : U8 = StructAtIndex 1 #Attr.3;
    let Str.73 : U8 = 0i64;
    let Str.69 : Int1 = lowlevel NumGt Str.72 Str.73;
    if Str.69 then
        let Str.71 : Int1 = false;
        let Str.70 : [C Int1, C I64] = Err Str.71;
        ret Str.70;
    else
        let Str.68 : I64 = StructAtIndex 0 #Attr.3;
        let Str.67 : [C Int1, C I64] = Ok Str.68;
        ret Str.67;

procedure Test.0 ():
    let Test.4 : Int1 = true;
    if Test.4 then
        let Test.6 : List I64 = Array [];
        let Test.5 : [C Int1, C I64] = CallByName List.9 Test.6;
        dec Test.6;
        ret Test.5;
    else
        let Test.3 : Str = "";
        let Test.2 : [C Int1, C I64] = CallByName Str.27 Test.3;
        dec Test.3;
        ret Test.2;
