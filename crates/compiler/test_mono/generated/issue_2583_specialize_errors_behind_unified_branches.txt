procedure List.2 (List.77, List.78):
    let List.297 : U64 = CallByName List.6 List.77;
    let List.293 : Int1 = CallByName Num.22 List.78 List.297;
    if List.293 then
        let List.295 : I64 = CallByName List.60 List.77 List.78;
        let List.294 : [C {}, C I64] = TagId(1) List.295;
        ret List.294;
    else
        let List.292 : {} = Struct {};
        let List.291 : [C {}, C I64] = TagId(0) List.292;
        ret List.291;

procedure List.6 (#Attr.2):
    let List.298 : U64 = lowlevel ListLen #Attr.2;
    ret List.298;

procedure List.60 (#Attr.2, #Attr.3):
    let List.296 : I64 = lowlevel ListGetUnsafe #Attr.2 #Attr.3;
    ret List.296;

procedure List.9 (List.205):
    let List.290 : U64 = 0i64;
    let List.283 : [C {}, C I64] = CallByName List.2 List.205 List.290;
    let List.287 : U8 = 1i64;
    let List.288 : U8 = GetTagId List.283;
    let List.289 : Int1 = lowlevel Eq List.287 List.288;
    if List.289 then
        let List.206 : I64 = UnionAtIndex (Id 1) (Index 0) List.283;
        let List.284 : [C Int1, C I64] = TagId(1) List.206;
        ret List.284;
    else
        let List.286 : Int1 = true;
        let List.285 : [C Int1, C I64] = TagId(0) List.286;
        ret List.285;

procedure Num.22 (#Attr.2, #Attr.3):
    let Num.188 : Int1 = lowlevel NumLt #Attr.2 #Attr.3;
    ret Num.188;

procedure Str.27 (#Attr.2):
    let #Attr.3 : {I64, U8} = lowlevel StrToNum #Attr.2;
    let Str.159 : U8 = StructAtIndex 1 #Attr.3;
    let Str.160 : U8 = 0i64;
    let Str.156 : Int1 = lowlevel NumGt Str.159 Str.160;
    if Str.156 then
        let Str.158 : Int1 = false;
        let Str.157 : [C Int1, C I64] = TagId(0) Str.158;
        ret Str.157;
    else
        let Str.155 : I64 = StructAtIndex 0 #Attr.3;
        let Str.154 : [C Int1, C I64] = TagId(1) Str.155;
        ret Str.154;

procedure Test.0 ():
    let Test.4 : Int1 = true;
    if Test.4 then
        let Test.6 : List I64 = Array [];
        let Test.5 : [C Int1, C I64] = CallByName List.9 Test.6;
        dec Test.6;
        ret Test.5;
    else
        let Test.3 : Str = "";
        let Test.2 : [C Int1, C I64] = CallByName Str.27 Test.3;
        dec Test.3;
        ret Test.2;
