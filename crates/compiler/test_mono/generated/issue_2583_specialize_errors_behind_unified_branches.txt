procedure Bool.7 (#Attr.2, #Attr.3):
    let Bool.9 : Int1 = lowlevel Eq #Attr.2 #Attr.3;
    ret Bool.9;

procedure List.2 (List.82, List.83):
    let List.331 : U64 = CallByName List.6 List.82;
    let List.327 : Int1 = CallByName Num.22 List.83 List.331;
    if List.327 then
        let List.329 : I64 = CallByName List.60 List.82 List.83;
        let List.328 : [C {}, C I64] = TagId(1) List.329;
        ret List.328;
    else
        let List.326 : {} = Struct {};
        let List.325 : [C {}, C I64] = TagId(0) List.326;
        ret List.325;

procedure List.6 (#Attr.2):
    let List.332 : U64 = lowlevel ListLen #Attr.2;
    ret List.332;

procedure List.60 (#Attr.2, #Attr.3):
    let List.330 : I64 = lowlevel ListGetUnsafe #Attr.2 #Attr.3;
    ret List.330;

procedure List.9 (List.210):
    let List.324 : U64 = 0i64;
    let List.317 : [C {}, C I64] = CallByName List.2 List.210 List.324;
    let List.321 : U8 = 1i64;
    let List.322 : U8 = GetTagId List.317;
    let List.323 : Int1 = lowlevel Eq List.321 List.322;
    if List.323 then
        let List.211 : I64 = UnionAtIndex (Id 1) (Index 0) List.317;
        let List.318 : [C Int1, C I64] = TagId(1) List.211;
        ret List.318;
    else
        let List.320 : Int1 = true;
        let List.319 : [C Int1, C I64] = TagId(0) List.320;
        ret List.319;

procedure Num.22 (#Attr.2, #Attr.3):
    let Num.257 : Int1 = lowlevel NumLt #Attr.2 #Attr.3;
    ret Num.257;

procedure Str.27 (Str.89):
    let Str.195 : [C Int1, C I64] = CallByName Str.62 Str.89;
    ret Str.195;

procedure Str.47 (#Attr.2):
    let Str.203 : {I64, U8} = lowlevel StrToNum #Attr.2;
    ret Str.203;

procedure Str.62 (Str.190):
    let Str.191 : {I64, U8} = CallByName Str.47 Str.190;
    let Str.201 : U8 = StructAtIndex 1 Str.191;
    let Str.202 : U8 = 0i64;
    let Str.198 : Int1 = CallByName Bool.7 Str.201 Str.202;
    if Str.198 then
        let Str.200 : I64 = StructAtIndex 0 Str.191;
        let Str.199 : [C Int1, C I64] = TagId(1) Str.200;
        ret Str.199;
    else
        let Str.197 : Int1 = false;
        let Str.196 : [C Int1, C I64] = TagId(0) Str.197;
        ret Str.196;

procedure Test.0 ():
    let Test.4 : Int1 = true;
    if Test.4 then
        let Test.6 : List I64 = Array [];
        let Test.5 : [C Int1, C I64] = CallByName List.9 Test.6;
        dec Test.6;
        ret Test.5;
    else
        let Test.3 : Str = "";
        let Test.2 : [C Int1, C I64] = CallByName Str.27 Test.3;
        dec Test.3;
        ret Test.2;
