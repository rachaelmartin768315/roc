procedure Bool.11 (#Attr.2, #Attr.3):
    let Bool.24 : Int1 = lowlevel Eq #Attr.2 #Attr.3;
    ret Bool.24;

procedure Bool.2 ():
    let Bool.23 : Int1 = true;
    ret Bool.23;

procedure List.2 (List.96, List.97):
    let List.508 : U64 = CallByName List.6 List.96;
    let List.504 : Int1 = CallByName Num.22 List.97 List.508;
    if List.504 then
        let List.506 : I64 = CallByName List.66 List.96 List.97;
        let List.505 : [C {}, C I64] = TagId(1) List.506;
        ret List.505;
    else
        let List.503 : {} = Struct {};
        let List.502 : [C {}, C I64] = TagId(0) List.503;
        ret List.502;

procedure List.6 (#Attr.2):
    let List.509 : U64 = lowlevel ListLen #Attr.2;
    ret List.509;

procedure List.66 (#Attr.2, #Attr.3):
    let List.507 : I64 = lowlevel ListGetUnsafe #Attr.2 #Attr.3;
    ret List.507;

procedure List.9 (List.287):
    let List.501 : U64 = 0i64;
    let List.494 : [C {}, C I64] = CallByName List.2 List.287 List.501;
    let List.498 : U8 = 1i64;
    let List.499 : U8 = GetTagId List.494;
    let List.500 : Int1 = lowlevel Eq List.498 List.499;
    if List.500 then
        let List.288 : I64 = UnionAtIndex (Id 1) (Index 0) List.494;
        let List.495 : [C Int1, C I64] = TagId(1) List.288;
        ret List.495;
    else
        let List.497 : Int1 = true;
        let List.496 : [C Int1, C I64] = TagId(0) List.497;
        ret List.496;

procedure Num.22 (#Attr.2, #Attr.3):
    let Num.278 : Int1 = lowlevel NumLt #Attr.2 #Attr.3;
    ret Num.278;

procedure Str.27 (Str.99):
    let Str.298 : [C Int1, C I64] = CallByName Str.72 Str.99;
    ret Str.298;

procedure Str.47 (#Attr.2):
    let Str.306 : {I64, U8} = lowlevel StrToNum #Attr.2;
    ret Str.306;

procedure Str.72 (Str.244):
    let Str.245 : {I64, U8} = CallByName Str.47 Str.244;
    let Str.304 : U8 = StructAtIndex 1 Str.245;
    let Str.305 : U8 = 0i64;
    let Str.301 : Int1 = CallByName Bool.11 Str.304 Str.305;
    if Str.301 then
        let Str.303 : I64 = StructAtIndex 0 Str.245;
        let Str.302 : [C Int1, C I64] = TagId(1) Str.303;
        ret Str.302;
    else
        let Str.300 : Int1 = false;
        let Str.299 : [C Int1, C I64] = TagId(0) Str.300;
        ret Str.299;

procedure Test.0 ():
    let Test.3 : Int1 = CallByName Bool.2;
    if Test.3 then
        let Test.5 : List I64 = Array [];
        let Test.4 : [C Int1, C I64] = CallByName List.9 Test.5;
        dec Test.5;
        ret Test.4;
    else
        let Test.2 : Str = "";
        let Test.1 : [C Int1, C I64] = CallByName Str.27 Test.2;
        dec Test.2;
        ret Test.1;
