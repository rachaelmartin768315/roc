procedure Bool.11 (#Attr.2, #Attr.3):
    let Bool.24 : Int1 = lowlevel Eq #Attr.2 #Attr.3;
    ret Bool.24;

procedure Bool.2 ():
    let Bool.23 : Int1 = true;
    ret Bool.23;

procedure List.2 (List.97, List.98):
    let List.535 : U64 = CallByName List.6 List.97;
    let List.531 : Int1 = CallByName Num.22 List.98 List.535;
    if List.531 then
        let List.533 : I64 = CallByName List.66 List.97 List.98;
        dec List.97;
        let List.532 : [C {}, C I64] = TagId(1) List.533;
        ret List.532;
    else
        dec List.97;
        let List.530 : {} = Struct {};
        let List.529 : [C {}, C I64] = TagId(0) List.530;
        ret List.529;

procedure List.6 (#Attr.2):
    let List.536 : U64 = lowlevel ListLen #Attr.2;
    ret List.536;

procedure List.66 (#Attr.2, #Attr.3):
    let List.534 : I64 = lowlevel ListGetUnsafe #Attr.2 #Attr.3;
    ret List.534;

procedure List.9 (List.293):
    let List.528 : U64 = 0i64;
    let List.521 : [C {}, C I64] = CallByName List.2 List.293 List.528;
    let List.525 : U8 = 1i64;
    let List.526 : U8 = GetTagId List.521;
    let List.527 : Int1 = lowlevel Eq List.525 List.526;
    if List.527 then
        let List.294 : I64 = UnionAtIndex (Id 1) (Index 0) List.521;
        let List.522 : [C Int1, C I64] = TagId(1) List.294;
        ret List.522;
    else
        let List.524 : Int1 = true;
        let List.523 : [C Int1, C I64] = TagId(0) List.524;
        ret List.523;

procedure Num.22 (#Attr.2, #Attr.3):
    let Num.281 : Int1 = lowlevel NumLt #Attr.2 #Attr.3;
    ret Num.281;

procedure Str.27 (Str.99):
    let Str.298 : [C Int1, C I64] = CallByName Str.72 Str.99;
    ret Str.298;

procedure Str.47 (#Attr.2):
    let Str.306 : {I64, U8} = lowlevel StrToNum #Attr.2;
    ret Str.306;

procedure Str.72 (Str.244):
    let Str.245 : {I64, U8} = CallByName Str.47 Str.244;
    dec Str.244;
    let Str.304 : U8 = StructAtIndex 1 Str.245;
    let Str.305 : U8 = 0i64;
    let Str.301 : Int1 = CallByName Bool.11 Str.304 Str.305;
    if Str.301 then
        let Str.303 : I64 = StructAtIndex 0 Str.245;
        let Str.302 : [C Int1, C I64] = TagId(1) Str.303;
        ret Str.302;
    else
        let Str.300 : Int1 = false;
        let Str.299 : [C Int1, C I64] = TagId(0) Str.300;
        ret Str.299;

procedure Test.0 ():
    let Test.3 : Int1 = CallByName Bool.2;
    if Test.3 then
        let Test.5 : List I64 = Array [];
        let Test.4 : [C Int1, C I64] = CallByName List.9 Test.5;
        ret Test.4;
    else
        let Test.2 : Str = "";
        let Test.1 : [C Int1, C I64] = CallByName Str.27 Test.2;
        ret Test.1;
