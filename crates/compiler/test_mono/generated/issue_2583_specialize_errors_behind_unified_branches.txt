procedure Bool.11 (#Attr.2, #Attr.3):
    let Bool.24 : Int1 = lowlevel Eq #Attr.2 #Attr.3;
    ret Bool.24;

procedure Bool.2 ():
    let Bool.23 : Int1 = true;
    ret Bool.23;

procedure List.2 (List.107, List.108):
    let List.586 : U64 = CallByName List.6 List.107;
    let List.582 : Int1 = CallByName Num.22 List.108 List.586;
    if List.582 then
        let List.584 : I64 = CallByName List.66 List.107 List.108;
        dec List.107;
        let List.583 : [C {}, C I64] = TagId(1) List.584;
        ret List.583;
    else
        dec List.107;
        let List.581 : {} = Struct {};
        let List.580 : [C {}, C I64] = TagId(0) List.581;
        ret List.580;

procedure List.6 (#Attr.2):
    let List.587 : U64 = lowlevel ListLenU64 #Attr.2;
    ret List.587;

procedure List.66 (#Attr.2, #Attr.3):
    let List.585 : I64 = lowlevel ListGetUnsafe #Attr.2 #Attr.3;
    ret List.585;

procedure List.9 (List.334):
    let List.579 : U64 = 0i64;
    let List.572 : [C {}, C I64] = CallByName List.2 List.334 List.579;
    let List.576 : U8 = 1i64;
    let List.577 : U8 = GetTagId List.572;
    let List.578 : Int1 = lowlevel Eq List.576 List.577;
    if List.578 then
        let List.335 : I64 = UnionAtIndex (Id 1) (Index 0) List.572;
        let List.573 : [C Int1, C I64] = TagId(1) List.335;
        ret List.573;
    else
        let List.575 : Int1 = true;
        let List.574 : [C Int1, C I64] = TagId(0) List.575;
        ret List.574;

procedure Num.22 (#Attr.2, #Attr.3):
    let Num.279 : Int1 = lowlevel NumLt #Attr.2 #Attr.3;
    ret Num.279;

procedure Str.27 (Str.78):
    let Str.232 : [C Int1, C I64] = CallByName Str.60 Str.78;
    ret Str.232;

procedure Str.42 (#Attr.2):
    let Str.240 : {I64, U8} = lowlevel StrToNum #Attr.2;
    ret Str.240;

procedure Str.60 (Str.185):
    let Str.186 : {I64, U8} = CallByName Str.42 Str.185;
    dec Str.185;
    let Str.238 : U8 = StructAtIndex 1 Str.186;
    let Str.239 : U8 = 0i64;
    let Str.235 : Int1 = CallByName Bool.11 Str.238 Str.239;
    if Str.235 then
        let Str.237 : I64 = StructAtIndex 0 Str.186;
        let Str.236 : [C Int1, C I64] = TagId(1) Str.237;
        ret Str.236;
    else
        let Str.234 : Int1 = false;
        let Str.233 : [C Int1, C I64] = TagId(0) Str.234;
        ret Str.233;

procedure Test.0 ():
    let Test.3 : Int1 = CallByName Bool.2;
    if Test.3 then
        let Test.5 : List I64 = Array [];
        let Test.4 : [C Int1, C I64] = CallByName List.9 Test.5;
        ret Test.4;
    else
        let Test.2 : Str = "";
        let Test.1 : [C Int1, C I64] = CallByName Str.27 Test.2;
        ret Test.1;
