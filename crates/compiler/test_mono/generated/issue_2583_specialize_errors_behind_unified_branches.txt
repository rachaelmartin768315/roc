procedure List.2 (List.74, List.75):
    let List.281 : U64 = CallByName List.6 List.74;
    let List.277 : Int1 = CallByName Num.22 List.75 List.281;
    if List.277 then
        let List.279 : I64 = CallByName List.60 List.74 List.75;
        let List.278 : [C {}, C I64] = Ok List.279;
        ret List.278;
    else
        let List.276 : {} = Struct {};
        let List.275 : [C {}, C I64] = Err List.276;
        ret List.275;

procedure List.6 (#Attr.2):
    let List.282 : U64 = lowlevel ListLen #Attr.2;
    ret List.282;

procedure List.60 (#Attr.2, #Attr.3):
    let List.280 : I64 = lowlevel ListGetUnsafe #Attr.2 #Attr.3;
    ret List.280;

procedure List.9 (List.188):
    let List.273 : U64 = 0i64;
    let List.266 : [C {}, C I64] = CallByName List.2 List.188 List.273;
    let List.270 : U8 = 1i64;
    let List.271 : U8 = GetTagId List.266;
    let List.272 : Int1 = lowlevel Eq List.270 List.271;
    if List.272 then
        let List.189 : I64 = UnionAtIndex (Id 1) (Index 0) List.266;
        let List.267 : [C Int1, C I64] = Ok List.189;
        ret List.267;
    else
        let List.269 : Int1 = true;
        let List.268 : [C Int1, C I64] = Err List.269;
        ret List.268;

procedure Num.22 (#Attr.2, #Attr.3):
    let Num.188 : Int1 = lowlevel NumLt #Attr.2 #Attr.3;
    ret Num.188;

procedure Str.27 (#Attr.2):
    let #Attr.3 : {I64, U8} = lowlevel StrToNum #Attr.2;
    let Str.42 : U8 = StructAtIndex 1 #Attr.3;
    let Str.43 : U8 = 0i64;
    let Str.39 : Int1 = lowlevel NumGt Str.42 Str.43;
    if Str.39 then
        let Str.41 : Int1 = false;
        let Str.40 : [C Int1, C I64] = Err Str.41;
        ret Str.40;
    else
        let Str.38 : I64 = StructAtIndex 0 #Attr.3;
        let Str.37 : [C Int1, C I64] = Ok Str.38;
        ret Str.37;

procedure Test.0 ():
    let Test.4 : Int1 = true;
    if Test.4 then
        let Test.6 : List I64 = Array [];
        let Test.5 : [C Int1, C I64] = CallByName List.9 Test.6;
        dec Test.6;
        ret Test.5;
    else
        let Test.3 : Str = "";
        let Test.2 : [C Int1, C I64] = CallByName Str.27 Test.3;
        dec Test.3;
        ret Test.2;
