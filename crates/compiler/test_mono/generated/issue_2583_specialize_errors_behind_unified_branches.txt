procedure Bool.7 (#Attr.2, #Attr.3):
    let Bool.9 : Int1 = lowlevel Eq #Attr.2 #Attr.3;
    ret Bool.9;

procedure List.2 (List.78, List.79):
    let List.309 : U64 = CallByName List.6 List.78;
    let List.305 : Int1 = CallByName Num.22 List.79 List.309;
    if List.305 then
        let List.307 : I64 = CallByName List.60 List.78 List.79;
        let List.306 : [C {}, C I64] = TagId(1) List.307;
        ret List.306;
    else
        let List.304 : {} = Struct {};
        let List.303 : [C {}, C I64] = TagId(0) List.304;
        ret List.303;

procedure List.6 (#Attr.2):
    let List.310 : U64 = lowlevel ListLen #Attr.2;
    ret List.310;

procedure List.60 (#Attr.2, #Attr.3):
    let List.308 : I64 = lowlevel ListGetUnsafe #Attr.2 #Attr.3;
    ret List.308;

procedure List.9 (List.206):
    let List.302 : U64 = 0i64;
    let List.295 : [C {}, C I64] = CallByName List.2 List.206 List.302;
    let List.299 : U8 = 1i64;
    let List.300 : U8 = GetTagId List.295;
    let List.301 : Int1 = lowlevel Eq List.299 List.300;
    if List.301 then
        let List.207 : I64 = UnionAtIndex (Id 1) (Index 0) List.295;
        let List.296 : [C Int1, C I64] = TagId(1) List.207;
        ret List.296;
    else
        let List.298 : Int1 = true;
        let List.297 : [C Int1, C I64] = TagId(0) List.298;
        ret List.297;

procedure Num.22 (#Attr.2, #Attr.3):
    let Num.257 : Int1 = lowlevel NumLt #Attr.2 #Attr.3;
    ret Num.257;

procedure Str.27 (Str.88):
    let Str.194 : [C Int1, C I64] = CallByName Str.67 Str.88;
    ret Str.194;

procedure Str.47 (#Attr.2):
    let Str.202 : {I64, U8} = lowlevel StrToNum #Attr.2;
    ret Str.202;

procedure Str.67 (Str.189):
    let Str.190 : {I64, U8} = CallByName Str.47 Str.189;
    let Str.200 : U8 = StructAtIndex 1 Str.190;
    let Str.201 : U8 = 0i64;
    let Str.197 : Int1 = CallByName Bool.7 Str.200 Str.201;
    if Str.197 then
        let Str.199 : I64 = StructAtIndex 0 Str.190;
        let Str.198 : [C Int1, C I64] = TagId(1) Str.199;
        ret Str.198;
    else
        let Str.196 : Int1 = false;
        let Str.195 : [C Int1, C I64] = TagId(0) Str.196;
        ret Str.195;

procedure Test.0 ():
    let Test.4 : Int1 = true;
    if Test.4 then
        let Test.6 : List I64 = Array [];
        let Test.5 : [C Int1, C I64] = CallByName List.9 Test.6;
        dec Test.6;
        ret Test.5;
    else
        let Test.3 : Str = "";
        let Test.2 : [C Int1, C I64] = CallByName Str.27 Test.3;
        dec Test.3;
        ret Test.2;
