procedure Bool.11 (#Attr.2, #Attr.3):
    let Bool.24 : Int1 = lowlevel Eq #Attr.2 #Attr.3;
    ret Bool.24;

procedure Bool.2 ():
    let Bool.23 : Int1 = true;
    ret Bool.23;

procedure List.2 (List.99, List.100):
    let List.540 : U64 = CallByName List.6 List.99;
    let List.536 : Int1 = CallByName Num.22 List.100 List.540;
    if List.536 then
        let List.538 : I64 = CallByName List.66 List.99 List.100;
        dec List.99;
        let List.537 : [C {}, C I64] = TagId(1) List.538;
        ret List.537;
    else
        dec List.99;
        let List.535 : {} = Struct {};
        let List.534 : [C {}, C I64] = TagId(0) List.535;
        ret List.534;

procedure List.6 (#Attr.2):
    let List.541 : U64 = lowlevel ListLen #Attr.2;
    ret List.541;

procedure List.66 (#Attr.2, #Attr.3):
    let List.539 : I64 = lowlevel ListGetUnsafe #Attr.2 #Attr.3;
    ret List.539;

procedure List.9 (List.295):
    let List.533 : U64 = 0i64;
    let List.526 : [C {}, C I64] = CallByName List.2 List.295 List.533;
    let List.530 : U8 = 1i64;
    let List.531 : U8 = GetTagId List.526;
    let List.532 : Int1 = lowlevel Eq List.530 List.531;
    if List.532 then
        let List.296 : I64 = UnionAtIndex (Id 1) (Index 0) List.526;
        let List.527 : [C Int1, C I64] = TagId(1) List.296;
        ret List.527;
    else
        let List.529 : Int1 = true;
        let List.528 : [C Int1, C I64] = TagId(0) List.529;
        ret List.528;

procedure Num.22 (#Attr.2, #Attr.3):
    let Num.292 : Int1 = lowlevel NumLt #Attr.2 #Attr.3;
    ret Num.292;

procedure Str.27 (Str.100):
    let Str.291 : [C Int1, C I64] = CallByName Str.72 Str.100;
    ret Str.291;

procedure Str.47 (#Attr.2):
    let Str.299 : {I64, U8} = lowlevel StrToNum #Attr.2;
    ret Str.299;

procedure Str.72 (Str.236):
    let Str.237 : {I64, U8} = CallByName Str.47 Str.236;
    dec Str.236;
    let Str.297 : U8 = StructAtIndex 1 Str.237;
    let Str.298 : U8 = 0i64;
    let Str.294 : Int1 = CallByName Bool.11 Str.297 Str.298;
    if Str.294 then
        let Str.296 : I64 = StructAtIndex 0 Str.237;
        let Str.295 : [C Int1, C I64] = TagId(1) Str.296;
        ret Str.295;
    else
        let Str.293 : Int1 = false;
        let Str.292 : [C Int1, C I64] = TagId(0) Str.293;
        ret Str.292;

procedure Test.0 ():
    let Test.3 : Int1 = CallByName Bool.2;
    if Test.3 then
        let Test.5 : List I64 = Array [];
        let Test.4 : [C Int1, C I64] = CallByName List.9 Test.5;
        ret Test.4;
    else
        let Test.2 : Str = "";
        let Test.1 : [C Int1, C I64] = CallByName Str.27 Test.2;
        ret Test.1;
