procedure List.2 (List.75, List.76):
    let List.293 : U64 = CallByName List.6 List.75;
    let List.289 : Int1 = CallByName Num.22 List.76 List.293;
    if List.289 then
        let List.291 : I64 = CallByName List.60 List.75 List.76;
        let List.290 : [C {}, C I64] = TagId(1) List.291;
        ret List.290;
    else
        let List.288 : {} = Struct {};
        let List.287 : [C {}, C I64] = TagId(0) List.288;
        ret List.287;

procedure List.6 (#Attr.2):
    let List.294 : U64 = lowlevel ListLen #Attr.2;
    ret List.294;

procedure List.60 (#Attr.2, #Attr.3):
    let List.292 : I64 = lowlevel ListGetUnsafe #Attr.2 #Attr.3;
    ret List.292;

procedure List.9 (List.201):
    let List.286 : U64 = 0i64;
    let List.279 : [C {}, C I64] = CallByName List.2 List.201 List.286;
    let List.283 : U8 = 1i64;
    let List.284 : U8 = GetTagId List.279;
    let List.285 : Int1 = lowlevel Eq List.283 List.284;
    if List.285 then
        let List.202 : I64 = UnionAtIndex (Id 1) (Index 0) List.279;
        let List.280 : [C Int1, C I64] = TagId(1) List.202;
        ret List.280;
    else
        let List.282 : Int1 = true;
        let List.281 : [C Int1, C I64] = TagId(0) List.282;
        ret List.281;

procedure Num.22 (#Attr.2, #Attr.3):
    let Num.188 : Int1 = lowlevel NumLt #Attr.2 #Attr.3;
    ret Num.188;

procedure Str.27 (#Attr.2):
    let #Attr.3 : {I64, U8} = lowlevel StrToNum #Attr.2;
    let Str.159 : U8 = StructAtIndex 1 #Attr.3;
    let Str.160 : U8 = 0i64;
    let Str.156 : Int1 = lowlevel NumGt Str.159 Str.160;
    if Str.156 then
        let Str.158 : Int1 = false;
        let Str.157 : [C Int1, C I64] = TagId(0) Str.158;
        ret Str.157;
    else
        let Str.155 : I64 = StructAtIndex 0 #Attr.3;
        let Str.154 : [C Int1, C I64] = TagId(1) Str.155;
        ret Str.154;

procedure Test.0 ():
    let Test.4 : Int1 = true;
    if Test.4 then
        let Test.6 : List I64 = Array [];
        let Test.5 : [C Int1, C I64] = CallByName List.9 Test.6;
        dec Test.6;
        ret Test.5;
    else
        let Test.3 : Str = "";
        let Test.2 : [C Int1, C I64] = CallByName Str.27 Test.3;
        dec Test.3;
        ret Test.2;
