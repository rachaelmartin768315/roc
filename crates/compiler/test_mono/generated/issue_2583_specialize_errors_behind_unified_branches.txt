procedure List.2 (List.75, List.76):
    let List.299 : U64 = CallByName List.6 List.75;
    let List.295 : Int1 = CallByName Num.22 List.76 List.299;
    if List.295 then
        let List.297 : I64 = CallByName List.60 List.75 List.76;
        let List.296 : [C {}, C I64] = Ok List.297;
        ret List.296;
    else
        let List.294 : {} = Struct {};
        let List.293 : [C {}, C I64] = Err List.294;
        ret List.293;

procedure List.6 (#Attr.2):
    let List.300 : U64 = lowlevel ListLen #Attr.2;
    ret List.300;

procedure List.60 (#Attr.2, #Attr.3):
    let List.298 : I64 = lowlevel ListGetUnsafe #Attr.2 #Attr.3;
    ret List.298;

procedure List.9 (List.202):
    let List.291 : U64 = 0i64;
    let List.284 : [C {}, C I64] = CallByName List.2 List.202 List.291;
    let List.288 : U8 = 1i64;
    let List.289 : U8 = GetTagId List.284;
    let List.290 : Int1 = lowlevel Eq List.288 List.289;
    if List.290 then
        let List.203 : I64 = UnionAtIndex (Id 1) (Index 0) List.284;
        let List.285 : [C Int1, C I64] = Ok List.203;
        ret List.285;
    else
        let List.287 : Int1 = true;
        let List.286 : [C Int1, C I64] = Err List.287;
        ret List.286;

procedure Num.22 (#Attr.2, #Attr.3):
    let Num.273 : Int1 = lowlevel NumLt #Attr.2 #Attr.3;
    ret Num.273;

procedure Str.27 (#Attr.2):
    let #Attr.3 : {I64, U8} = lowlevel StrToNum #Attr.2;
    let Str.70 : U8 = StructAtIndex 1 #Attr.3;
    let Str.71 : U8 = 0i64;
    let Str.67 : Int1 = lowlevel NumGt Str.70 Str.71;
    if Str.67 then
        let Str.69 : Int1 = false;
        let Str.68 : [C Int1, C I64] = Err Str.69;
        ret Str.68;
    else
        let Str.66 : I64 = StructAtIndex 0 #Attr.3;
        let Str.65 : [C Int1, C I64] = Ok Str.66;
        ret Str.65;

procedure Test.0 ():
    let Test.4 : Int1 = true;
    if Test.4 then
        let Test.6 : List I64 = Array [];
        let Test.5 : [C Int1, C I64] = CallByName List.9 Test.6;
        dec Test.6;
        ret Test.5;
    else
        let Test.3 : Str = "";
        let Test.2 : [C Int1, C I64] = CallByName Str.27 Test.3;
        dec Test.3;
        ret Test.2;
