procedure Bool.11 (#Attr.2, #Attr.3):
    let Bool.24 : Int1 = lowlevel Eq #Attr.2 #Attr.3;
    ret Bool.24;

procedure Bool.2 ():
    let Bool.23 : Int1 = true;
    ret Bool.23;

procedure List.2 (List.100, List.101):
    let List.548 : U64 = CallByName List.6 List.100;
    let List.544 : Int1 = CallByName Num.22 List.101 List.548;
    if List.544 then
        let List.546 : I64 = CallByName List.66 List.100 List.101;
        dec List.100;
        let List.545 : [C {}, C I64] = TagId(1) List.546;
        ret List.545;
    else
        dec List.100;
        let List.543 : {} = Struct {};
        let List.542 : [C {}, C I64] = TagId(0) List.543;
        ret List.542;

procedure List.6 (#Attr.2):
    let List.549 : U64 = lowlevel ListLen #Attr.2;
    ret List.549;

procedure List.66 (#Attr.2, #Attr.3):
    let List.547 : I64 = lowlevel ListGetUnsafe #Attr.2 #Attr.3;
    ret List.547;

procedure List.9 (List.306):
    let List.541 : U64 = 0i64;
    let List.534 : [C {}, C I64] = CallByName List.2 List.306 List.541;
    let List.538 : U8 = 1i64;
    let List.539 : U8 = GetTagId List.534;
    let List.540 : Int1 = lowlevel Eq List.538 List.539;
    if List.540 then
        let List.307 : I64 = UnionAtIndex (Id 1) (Index 0) List.534;
        let List.535 : [C Int1, C I64] = TagId(1) List.307;
        ret List.535;
    else
        let List.537 : Int1 = true;
        let List.536 : [C Int1, C I64] = TagId(0) List.537;
        ret List.536;

procedure Num.22 (#Attr.2, #Attr.3):
    let Num.292 : Int1 = lowlevel NumLt #Attr.2 #Attr.3;
    ret Num.292;

procedure Str.27 (Str.99):
    let Str.289 : [C Int1, C I64] = CallByName Str.72 Str.99;
    ret Str.289;

procedure Str.47 (#Attr.2):
    let Str.297 : {I64, U8} = lowlevel StrToNum #Attr.2;
    ret Str.297;

procedure Str.72 (Str.235):
    let Str.236 : {I64, U8} = CallByName Str.47 Str.235;
    dec Str.235;
    let Str.295 : U8 = StructAtIndex 1 Str.236;
    let Str.296 : U8 = 0i64;
    let Str.292 : Int1 = CallByName Bool.11 Str.295 Str.296;
    if Str.292 then
        let Str.294 : I64 = StructAtIndex 0 Str.236;
        let Str.293 : [C Int1, C I64] = TagId(1) Str.294;
        ret Str.293;
    else
        let Str.291 : Int1 = false;
        let Str.290 : [C Int1, C I64] = TagId(0) Str.291;
        ret Str.290;

procedure Test.0 ():
    let Test.3 : Int1 = CallByName Bool.2;
    if Test.3 then
        let Test.5 : List I64 = Array [];
        let Test.4 : [C Int1, C I64] = CallByName List.9 Test.5;
        ret Test.4;
    else
        let Test.2 : Str = "";
        let Test.1 : [C Int1, C I64] = CallByName Str.27 Test.2;
        ret Test.1;
