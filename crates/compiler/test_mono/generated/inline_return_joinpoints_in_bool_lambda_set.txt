procedure Bool.1 ():
    let Bool.23 : Int1 = false;
    ret Bool.23;

procedure Num.19 (#Attr.2, #Attr.3):
    let Num.256 : I64 = lowlevel NumAdd #Attr.2 #Attr.3;
    ret Num.256;

procedure Test.3 (Test.4):
    ret Test.4;

procedure Test.0 (Test.1):
    joinpoint Test.13 Test.2:
        let Test.11 : I64 = 1i64;
        let Test.7 : I64 = CallByName Num.19 Test.1 Test.11;
        joinpoint Test.8 Test.6:
            ret Test.6;
        in
        switch Test.2:
            case 0:
                let Test.9 : I64 = CallByName Test.0 Test.7;
                jump Test.8 Test.9;
        
            default:
                let Test.10 : I64 = CallByName Test.3 Test.7;
                jump Test.8 Test.10;
        
    in
    let Test.15 : Int1 = CallByName Bool.1;
    if Test.15 then
        let Test.12 : Int1 = false;
        jump Test.13 Test.12;
    else
        let Test.12 : Int1 = true;
        jump Test.13 Test.12;
