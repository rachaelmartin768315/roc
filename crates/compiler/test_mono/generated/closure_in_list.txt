procedure List.6 (#Attr.2):
<<<<<<< HEAD
    let List.284 : U64 = lowlevel ListLen #Attr.2;
    ret List.284;
=======
<<<<<<< HEAD:crates/compiler/test_mono/generated/closure_in_list.txt
    let List.259 : U64 = lowlevel ListLen #Attr.2;
    ret List.259;
=======
    let List.213 : U64 = lowlevel ListLen #Attr.2;
    ret List.213;
>>>>>>> a5fc399f4 (Rename multimorphic tests to capture niche):compiler/test_mono/generated/closure_in_list.txt
>>>>>>> 25bb3751b (Rename multimorphic tests to capture niche)

procedure Test.1 (Test.5):
    let Test.2 : I64 = 41i64;
    let Test.10 : {I64} = Struct {Test.2};
    let Test.9 : List {I64} = Array [Test.10];
    ret Test.9;

procedure Test.3 (Test.8, #Attr.12):
    let Test.2 : I64 = StructAtIndex 0 #Attr.12;
    ret Test.2;

procedure Test.0 ():
    let Test.7 : {} = Struct {};
    let Test.4 : List {I64} = CallByName Test.1 Test.7;
    let Test.6 : U64 = CallByName List.6 Test.4;
    dec Test.4;
    ret Test.6;
