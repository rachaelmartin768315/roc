procedure List.4 (#Attr.2, #Attr.3):
<<<<<<< HEAD
    let List.284 : List I64 = lowlevel ListAppend #Attr.2 #Attr.3;
    ret List.284;
=======
<<<<<<< HEAD:crates/compiler/test_mono/generated/list_append_closure.txt
    let List.259 : List I64 = lowlevel ListAppend #Attr.2 #Attr.3;
    ret List.259;
=======
    let List.213 : List I64 = lowlevel ListAppend #Attr.2 #Attr.3;
    ret List.213;
>>>>>>> a5fc399f4 (Rename multimorphic tests to capture niche):compiler/test_mono/generated/list_append_closure.txt
>>>>>>> 25bb3751b (Rename multimorphic tests to capture niche)

procedure Test.1 (Test.2):
    let Test.6 : I64 = 42i64;
    let Test.5 : List I64 = CallByName List.4 Test.2 Test.6;
    ret Test.5;

procedure Test.0 ():
    let Test.4 : List I64 = Array [1i64, 2i64];
    let Test.3 : List I64 = CallByName Test.1 Test.4;
    ret Test.3;
