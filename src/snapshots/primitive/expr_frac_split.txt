~~~META
description=Test frac_f64 and frac_dec split
type=file
~~~SOURCE
module [test]

test = {
    # Dec values (exact decimal representation)
    dec1: 0.1,
    dec2: 0.5,
    dec3: 19.99,
    dec4: -42.5,

    # F64 values (too large/small for Dec)
    f64_1: 1e400,
    f64_2: -1e400,
    f64_3: 1e-400,

    # F32 values (fits in f32)
    f32_1: 1.5,
    f32_2: 3.14,

    # Edge cases
    zero: 0.0,
    one: 1.0,
}
~~~PROBLEMS
NOT IMPLEMENTED
This feature is not yet implemented: canonicalize record expression
~~~TOKENS
KwModule(1:1-1:7),OpenSquare(1:8-1:9),LowerIdent(1:9-1:13),CloseSquare(1:13-1:14),Newline(1:1-1:1),
Newline(1:1-1:1),
LowerIdent(3:1-3:5),OpAssign(3:6-3:7),OpenCurly(3:8-3:9),Newline(1:1-1:1),
Newline(4:6-4:48),
LowerIdent(5:5-5:9),OpColon(5:9-5:10),Float(5:11-5:14),Comma(5:14-5:15),Newline(1:1-1:1),
LowerIdent(6:5-6:9),OpColon(6:9-6:10),Float(6:11-6:14),Comma(6:14-6:15),Newline(1:1-1:1),
LowerIdent(7:5-7:9),OpColon(7:9-7:10),Float(7:11-7:16),Comma(7:16-7:17),Newline(1:1-1:1),
LowerIdent(8:5-8:9),OpColon(8:9-8:10),Float(8:11-8:16),Comma(8:16-8:17),Newline(1:1-1:1),
Newline(1:1-1:1),
Newline(10:6-10:43),
LowerIdent(11:5-11:10),OpColon(11:10-11:11),Float(11:12-11:17),Comma(11:17-11:18),Newline(1:1-1:1),
LowerIdent(12:5-12:10),OpColon(12:10-12:11),Float(12:12-12:18),Comma(12:18-12:19),Newline(1:1-1:1),
LowerIdent(13:5-13:10),OpColon(13:10-13:11),Float(13:12-13:18),Comma(13:18-13:19),Newline(1:1-1:1),
Newline(1:1-1:1),
Newline(15:6-15:31),
LowerIdent(16:5-16:10),OpColon(16:10-16:11),Float(16:12-16:15),Comma(16:15-16:16),Newline(1:1-1:1),
LowerIdent(17:5-17:10),OpColon(17:10-17:11),Float(17:12-17:16),Comma(17:16-17:17),Newline(1:1-1:1),
Newline(1:1-1:1),
Newline(19:6-19:17),
LowerIdent(20:5-20:9),OpColon(20:9-20:10),Float(20:11-20:14),Comma(20:14-20:15),Newline(1:1-1:1),
LowerIdent(21:5-21:8),OpColon(21:8-21:9),Float(21:10-21:13),Comma(21:13-21:14),Newline(1:1-1:1),
CloseCurly(22:1-22:2),EndOfFile(22:2-22:2),
~~~PARSE
(file (1:1-22:2)
	(module (1:1-1:14)
		(exposes (1:8-1:14) (exposed_item (lower_ident "test"))))
	(statements
		(decl (3:1-22:2)
			(ident (3:1-3:5) "test")
			(record (3:8-22:2)
				(field "dec1" (frac (5:11-5:14) "0.1"))
				(field "dec2" (frac (6:11-6:14) "0.5"))
				(field "dec3" (frac (7:11-7:16) "19.99"))
				(field "dec4" (frac (8:11-8:16) "-42.5"))
				(field "f64_1" (frac (11:12-11:17) "1e400"))
				(field "f64_2" (frac (12:12-12:18) "-1e400"))
				(field "f64_3" (frac (13:12-13:18) "1e-400"))
				(field "f32_1" (frac (16:12-16:15) "1.5"))
				(field "f32_2" (frac (17:12-17:16) "3.14"))
				(field "zero" (frac (20:11-20:14) "0.0"))
				(field "one" (frac (21:10-21:13) "1.0"))))))
~~~FORMATTED
module [test]

test = {
	# Dec values (exact decimal representation)
	dec1: 0.1,
	dec2: 0.5,
	dec3: 19.99,
	dec4: -42.5,

	# F64 values (too large/small for Dec)
	f64_1: 1e400,
	f64_2: -1e400,
	f64_3: 1e-400,

	# F32 values (fits in f32)
	f32_1: 1.5,
	f32_2: 3.14,

	# Edge cases
	zero: 0.0,
	one: 1.0,
}
~~~CANONICALIZE
(can_ir
	(d_let
		(def_pattern
			(p_assign (3:1-3:5)
				(pid 12)
				(ident "test")))
		(def_expr (e_runtime_error (1:1-1:1) "not_implemented"))))
~~~END