~~~META
description=fuzz crash
type=file
~~~SOURCE
me = "luc"
foo = "hello ${namF
~~~PROBLEMS
MISSING HEADER

The module header is missing.

me = "luc"
foo = "hello ${namF
Note: This is a parse error. Check your syntax.
UNKNOWN OPERATOR

This looks like an operator, but it's not one I recognize!

me = "luc"
foo = "hello ${namF
Note: This is a parse error. Check your syntax.
SYNTAX PROBLEM

Expected the string interpolation to be closed.

me = "luc"
foo = "hello ${namF
Note: This is a parse error. Check your syntax.
INVALID STATEMENT

This statement is not allowed at the top level.

me = "luc"
foo = "hello ${namF
Only definitions, type annotations, and imports are allowed at the top level.
INVALID STATEMENT

This statement is not allowed at the top level.

me = "luc"
foo = "hello ${namF
Only definitions, type annotations, and imports are allowed at the top level.
UNKNOWN OPERATOR

This looks like an operator, but it's not one I recognize!

me = "luc"
foo = "hello ${namF
Check the spelling and make sure you're using a valid Roc operator.
~~~TOKENS
LowerIdent(1:1-1:3),OpAssign(1:4-1:5),StringStart(1:6-1:7),StringPart(1:7-1:10),StringEnd(1:10-1:11),Newline(1:1-1:1),
LowerIdent(2:1-2:4),OpAssign(2:5-2:6),StringStart(2:7-2:8),StringPart(2:8-2:14),OpenStringInterpolation(2:14-2:16),LowerIdent(2:16-2:20),EndOfFile(2:20-2:20),
~~~PARSE
(file (1:1-2:20)
	(malformed_header (1:1-1:3) "missing_header")
	(statements
		(malformed_expr (1:4-1:5) "expr_unexpected_token")
		(string (1:6-1:11) (string_part (1:7-1:10) "luc"))
		(decl (2:1-2:20)
			(ident (2:1-2:4) "foo")
			(malformed_expr (2:7-2:20) "string_expected_close_interpolation"))))
~~~FORMATTED
"luc"
foo = 
~~~CANONICALIZE
(can_ir
	(top_level_defs
		(def
			"let"
			(pattern (2:1-2:4)
				(assign (2:1-2:4) (ident "foo")))
			(expr (2:7-2:20) (runtime_error (2:1-2:20) "expr_not_canonicalized"))
			"#0")))
~~~END