~~~META
description=fuzz crash
type=file
~~~SOURCE
H{o,
    ]
foo =

    "on        (string 'onmo %')))
~~~PROBLEMS
Misplaced carriage return character

ASCII control character found

Too many closing braces

MISSING HEADER

The module header is missing.

H{o,
    ]
foo =

    "on        (string 'onmo %')))
Note: This is a parse error. Check your syntax.
INVALID STATEMENT

This statement is not allowed at the top level.

H{o,
    ]
foo =

    "on        (string 'onmo %')))
Only definitions, type annotations, and imports are allowed at the top level.
~~~TOKENS
UpperIdent(1:1-1:2),OpenCurly(1:2-1:3),LowerIdent(1:3-1:4),Comma(1:4-1:5),Newline(1:1-1:1),
CloseCurly(2:6-2:7),Newline(1:1-1:1),
LowerIdent(3:1-3:4),OpAssign(3:5-3:6),Newline(1:1-1:1),
Newline(1:1-1:1),
StringStart(5:5-5:6),StringPart(5:6-5:35),EndOfFile(5:35-5:35),
~~~PARSE
(file (1:1-5:35)
	(malformed_header (1:1-1:2) "missing_header")
	(statements
		(record (1:2-2:7) (field "o"))
		(decl (3:1-5:35)
			(ident (3:1-3:4) "foo")
			(string (5:5-5:35) (string_part (5:6-5:35) "on        (string 'onmo %')))")))))
~~~FORMATTED
{
	o,
}
foo = 

	"on        (string 'onmo %')))"
~~~CANONICALIZE
(can_ir
	(top_level_defs
		(def
			"let"
			(pattern (3:1-3:4)
				(assign (3:1-3:4) (ident "foo")))
			(expr (5:5-5:35)
				(string (5:5-5:35) (literal (5:6-5:35) "on        (string 'onmo %')))")))
			"#0")))
~~~END