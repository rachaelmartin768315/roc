~~~META
description=Single type argument application in function annotation
type=file
~~~SOURCE
app [main!] { pf: platform "../basic-cli/main.roc" }

processList : List(Str) -> U64
processList = |list| list.len()

main! = |_| processList(["one","two"])
~~~PROBLEMS
NOT IMPLEMENTED
This feature is not yet implemented: canonicalize record expression
~~~TOKENS
KwApp(1:1-1:4),OpenSquare(1:5-1:6),LowerIdent(1:6-1:11),CloseSquare(1:11-1:12),OpenCurly(1:13-1:14),LowerIdent(1:15-1:17),OpColon(1:17-1:18),KwPlatform(1:19-1:27),StringStart(1:28-1:29),StringPart(1:29-1:54),StringEnd(1:54-1:55),CloseCurly(1:56-1:57),Newline(1:1-1:1),
Newline(1:1-1:1),
LowerIdent(3:1-3:12),OpColon(3:13-3:14),UpperIdent(3:15-3:19),NoSpaceOpenRound(3:19-3:20),UpperIdent(3:20-3:23),CloseRound(3:23-3:24),OpArrow(3:25-3:27),UpperIdent(3:28-3:31),Newline(1:1-1:1),
LowerIdent(4:1-4:12),OpAssign(4:13-4:14),OpBar(4:15-4:16),LowerIdent(4:16-4:20),OpBar(4:20-4:21),Int(4:22-4:24),Newline(1:1-1:1),
Newline(1:1-1:1),
LowerIdent(6:1-6:6),OpAssign(6:7-6:8),OpBar(6:9-6:10),Underscore(6:10-6:11),OpBar(6:11-6:12),OpenCurly(6:13-6:14),CloseCurly(6:14-6:15),EndOfFile(6:15-6:15),
~~~PARSE
(file (1:1-6:15)
	(app (1:1-1:57)
		(provides (1:6-1:12) (exposed_item (lower_ident "main!")))
		(record_field (1:15-1:57)
			"pf"
			(string (1:28-1:55) (string_part (1:29-1:54) "../basic-cli/platform.roc")))
		(packages (1:13-1:57)
			(record_field (1:15-1:57)
				"pf"
				(string (1:28-1:55) (string_part (1:29-1:54) "../basic-cli/platform.roc")))))
	(statements
		(type_anno (3:1-4:12)
			"processList"
			(fn (3:15-3:31)
				(apply (3:15-3:24)
					(ty "List")
					(ty "Str"))
				(ty "U64")))
		(decl (4:1-4:24)
			(ident (4:1-4:12) "processList")
			(lambda (4:15-4:24)
				(args (ident (4:16-4:20) "list"))
				(int (4:22-4:24) "42")))
		(decl (6:1-6:15)
			(ident (6:1-6:6) "main!")
			(lambda (6:9-6:15)
				(args (underscore))
				(record (6:13-6:15))))))
~~~FORMATTED
NO CHANGE
~~~CANONICALIZE
(can_ir
	(d_let
		(def_pattern
			(p_assign (4:1-4:12)
				(pid 76)
				(ident "processList")))
		(def_expr
			(e_lambda (4:15-4:24)
				(args
					(p_assign (4:16-4:20)
						(pid 77)
						(ident "list")))
				(e_int (4:22-4:24)
					(int_var 79)
					(precision_var 78)
					(literal "42")
					(value "TODO")
					(bound "u8"))))
		(annotation (4:1-4:12) (signature 83)))
	(d_let
		(def_pattern
			(p_assign (6:1-6:6)
				(pid 86)
				(ident "main!")))
		(def_expr
			(e_lambda (6:9-6:15)
				(args (p_underscore (6:10-6:11) (pid 87)))
				(e_runtime_error (1:1-1:1) "not_implemented")))))
~~~TYPES
(inferred_types
	(defs
		(def "processList" 85 (type "*"))
		(def "main!" 91 (type "*")))
	(expressions
		(expr (4:15-4:24) 81 (type "*"))
		(expr (6:9-6:15) 90 (type "*"))))
~~~END
