on: [pull_request]

name: CI

env:
  RUSTC_WRAPPER: /usr/local/bin/sccache
  SCCACHE_BUCKET: ${{ secrets.SCCACHE_BUCKET }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  SCCACHE_S3_USE_SSL: ${{ secrets.SCCACHE_S3_USE_SSL }}
  SCCACHE_REGION: ${{ secrets.SCCACHE_REGION }}

jobs:
  test:
    name: fmt, clippy, test, test --release
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v2

      - name: Log CPU model
        run: sudo cat /proc/cpuinfo | grep name | uniq

      - name: Install CI Libraries
        run: sudo ./ci/install-ci-libraries.sh 10

      - name: scope sccache to CPU model
        run: |
          export SCCACHE_S3_KEY_PREFIX=`sudo cat /proc/cpuinfo | grep name | uniq | awk {'print $6_$7'}`
          echo "::set-env name=SCCACHE_S3_KEY_PREFIX::$SCCACHE_S3_KEY_PREFIX"

      - name: print SCCACHE_S3_KEY_PREFIX
        run: echo $SCCACHE_S3_KEY_PREFIX

      - name: sccache version
        run: /usr/local/bin/sccache -V

      - name: Run Zig tests
        run: pushd compiler/builtins/bitcode; ./run-tests.sh; popd;

      - name: Enable LLD
        run: sudo ./ci/enable-lld.sh

      - uses: actions-rs/toolchain@v1
        name: Install Rust Toolchain
        with:
          profile: minimal
          toolchain: stable
          override: true

      - run: rustup component add rustfmt

      - uses: actions-rs/cargo@v1
        name: rustfmt version
        with:
          command: fmt
          args: --version

      - uses: actions-rs/cargo@v1
        name: cargo fmt --check
        with:
          command: fmt
          args: --all -- --check

      - run: rustup component add clippy

      - uses: actions-rs/cargo@v1
        name: clippy version
        with:
          command: clippy
          args: -V

      - uses: actions-rs/cargo@v1
        name: cargo clippy
        with:
          command: clippy
          args: -- -D warnings

      - uses: actions-rs/cargo@v1
        name: cargo test --release
        with:
          command: test
          args: --release

      - name: sccache stats
        run: /usr/local/bin/sccache --show-stats
